{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanlassiter/Dev/my-portfolio/todo-list-mern/frontend/src/components/todoList.component.js\";\nimport React from \"react\";\nimport Todo from \"../components/todo.component\";\nimport axios from \"axios\";\nimport Modal from \"../components/modal.components\";\nimport CreateTodo from \"./createTodo.component\";\nimport EditTodo from \"./editTodo.component\";\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createTodoClick = () => {\n      this.setState({\n        modalData: {\n          todo: \"new\"\n        }\n      });\n    };\n\n    this.editOnClick = currentTodo => {\n      console.log(\"EditOnClick triggered\"); // set state of modal\n\n      this.setState({\n        modalData: {\n          todo: currentTodo\n        }\n      });\n    };\n\n    this.editOnSubmit = todoId => {\n      console.log(\"Beginning of editOnSubmit in todoList component\");\n      axios.get(\"http://localhost:4000/todos/\" + todoId).then(res => {\n        const updatedTodo = res.data;\n        console.log(\"db response: \", res.data);\n        const arrayCopy = this.state.todos.map(currentTodo => {\n          console.log(\"updatedTodo: \", updatedTodo);\n\n          if (updatedTodo._id === currentTodo._id) {\n            return updatedTodo;\n          }\n\n          return currentTodo;\n        });\n        console.log(\"arrayCopy: \", arrayCopy);\n        this.setState({\n          todos: arrayCopy,\n          modalData: {}\n        });\n      });\n      console.log(\"END of todoList's editOnSubmit function\");\n    };\n\n    this.delete = todoId => {\n      const arrayCopy = this.state.todos.filter(todo => todo._id !== todoId);\n      axios.delete(\"http://localhost:4000/todos/\" + todoId).catch(error => {\n        console.log(error);\n      });\n      this.setState({\n        todos: arrayCopy\n      });\n    };\n\n    this.modalClose = () => {\n      // closes modal\n      this.setState({\n        modalData: {}\n      });\n    };\n\n    this.state = {\n      todos: [],\n      modalData: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:4000/todos/\").then(response => {\n      this.setState({\n        todos: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // CREATE -------------------------------------------------------------------\n\n\n  // END MODAL ------------------------------------------------------------------\n  render() {\n    const modalData = this.state.modalData;\n    console.log(\"modalData: \", modalData);\n    let modal;\n\n    if (this.state.modalData.todo === \"new\") {\n      modal = React.createElement(Modal, {\n        handleClose: this.modalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(EditTodo, {\n        todo: modalData,\n        submitEdit: this.editOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    } else if (this.state.modalData.todo) {\n      modal = React.createElement(Modal, {\n        handleClose: this.modalClose,\n        submitClick: this.createTodoSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(CreateTodo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    }\n\n    ;\n    const list = this.state.todos.map((currentTodo, i) => {\n      return React.createElement(Todo, {\n        delete: this.delete,\n        editClick: this.editOnClick,\n        todo: currentTodo,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Todo List Header\"), React.createElement(\"div\", {\n      className: \"contain-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"striped-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Responsibility\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Priority\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, list))), modal);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/jonathanlassiter/Dev/my-portfolio/todo-list-mern/frontend/src/components/todoList.component.js"],"names":["React","Todo","axios","Modal","CreateTodo","EditTodo","TodoList","Component","constructor","props","createTodoClick","setState","modalData","todo","editOnClick","currentTodo","console","log","editOnSubmit","todoId","get","then","res","updatedTodo","data","arrayCopy","state","todos","map","_id","delete","filter","catch","error","modalClose","componentDidMount","response","render","modal","createTodoSubmit","list","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,eAfmB,GAeF,MAAK;AACpB,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAC;AAACC,UAAAA,IAAI,EAAC;AAAN;AADE,OAAd;AAGD,KAnBkB;;AAAA,SAwBnBC,WAxBmB,GAwBLC,WAAW,IAAI;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAD2B,CAG3B;;AACA,WAAKN,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE;AAACC,UAAAA,IAAI,EAAEE;AAAP;AADC,OAAd;AAGD,KA/BkB;;AAAA,SAiCnBG,YAjCmB,GAiCJC,MAAM,IAAI;AACvBH,MAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACAf,MAAAA,KAAK,CAACkB,GAAN,CAAU,iCAAiCD,MAA3C,EAAmDE,IAAnD,CAAwDC,GAAG,IAAI;AAC7D,cAAMC,WAAW,GAAGD,GAAG,CAACE,IAAxB;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BK,GAAG,CAACE,IAAjC;AACA,cAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBb,WAAW,IAAI;AACpDC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BM,WAA7B;;AACA,cAAIA,WAAW,CAACM,GAAZ,KAAoBd,WAAW,CAACc,GAApC,EAAyC;AACvC,mBAAON,WAAP;AACD;;AACD,iBAAOR,WAAP;AACD,SANiB,CAAlB;AAOAC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BQ,SAA3B;AACA,aAAKd,QAAL,CAAc;AACZgB,UAAAA,KAAK,EAAEF,SADK;AAEZb,UAAAA,SAAS,EAAE;AAFC,SAAd;AAID,OAfD;AAiBAI,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD,KArDkB;;AAAA,SAuDnBa,MAvDmB,GAuDVX,MAAM,IAAI;AACjB,YAAMM,SAAS,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBI,MAAjB,CAAwBlB,IAAI,IAAIA,IAAI,CAACgB,GAAL,KAAaV,MAA7C,CAAlB;AAEAjB,MAAAA,KAAK,CAAC4B,MAAN,CAAa,iCAAiCX,MAA9C,EAAsDa,KAAtD,CAA4DC,KAAK,IAAI;AACnEjB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAZ;AACD,OAFD;AAIA,WAAKtB,QAAL,CAAc;AACZgB,QAAAA,KAAK,EAAEF;AADK,OAAd;AAGD,KAjEkB;;AAAA,SAmEnBS,UAnEmB,GAmEN,MAAM;AACjB;AACA,WAAKvB,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,KAxEkB;;AAEjB,SAAKc,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaf,MAAAA,SAAS,EAAE;AAAxB,KAAb;AACD;;AACDuB,EAAAA,iBAAiB,GAAG;AAClBjC,IAAAA,KAAK,CACFkB,GADH,CACO,8BADP,EAEGC,IAFH,CAEQe,QAAQ,IAAI;AAChB,WAAKzB,QAAL,CAAc;AAAEgB,QAAAA,KAAK,EAAES,QAAQ,CAACZ;AAAlB,OAAd;AACD,KAJH,EAKGQ,KALH,CAKS,UAASC,KAAT,EAAgB;AACrBjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAZ;AACD,KAPH;AAQD,GAdoC,CAerC;;;AA2DF;AACEI,EAAAA,MAAM,GAAG;AACP,UAAMzB,SAAS,GAAG,KAAKc,KAAL,CAAWd,SAA7B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,SAA3B;AACA,QAAI0B,KAAJ;;AAEA,QAAI,KAAKZ,KAAL,CAAWd,SAAX,CAAqBC,IAArB,KAA8B,KAAlC,EAAyC;AACvCyB,MAAAA,KAAK,GACH,oBAAC,KAAD;AACE,QAAA,WAAW,EAAE,KAAKJ,UADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGC,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEtB,SAAhB;AAA2B,QAAA,UAAU,EAAE,KAAKM,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CADF;AAQD,KATD,MASO,IAAI,KAAKQ,KAAL,CAAWd,SAAX,CAAqBC,IAAzB,EAA8B;AACnCyB,MAAAA,KAAK,GACH,oBAAC,KAAD;AACA,QAAA,WAAW,EAAE,KAAKJ,UADlB;AAEA,QAAA,WAAW,EAAE,KAAKK,gBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA,CADF;AASD;;AAAA;AACD,UAAMC,IAAI,GAAG,KAAKd,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,CAACb,WAAD,EAAc0B,CAAd,KAAoB;AACpD,aACE,oBAAC,IAAD;AACE,QAAA,MAAM,EAAE,KAAKX,MADf;AAEE,QAAA,SAAS,EAAE,KAAKhB,WAFlB;AAGE,QAAA,IAAI,EAAEC,WAHR;AAIE,QAAA,GAAG,EAAE0B,CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KATY,CAAb;AAWA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,IAAR,CATF,CADF,CAFF,EAeGF,KAfH,CADF;AAmBD;;AAlIoC;;AAqIvC,eAAehC,QAAf","sourcesContent":["import React from \"react\";\nimport Todo from \"../components/todo.component\";\nimport axios from \"axios\";\nimport Modal from \"../components/modal.components\";\nimport CreateTodo from \"./createTodo.component\";\nimport EditTodo from \"./editTodo.component\";\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { todos: [], modalData: {} };\n  }\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:4000/todos/\")\n      .then(response => {\n        this.setState({ todos: response.data });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n  // CREATE -------------------------------------------------------------------\n  createTodoClick =() =>{\n    this.setState({\n      modalData:{todo:\"new\"}\n    })\n  }\n\n  // END CREATE ---------------------------------------------------------------\n\n  // EDIT----------------------------------------------------------------------\n  editOnClick = currentTodo => {\n    console.log(\"EditOnClick triggered\");\n\n    // set state of modal\n    this.setState({\n      modalData: {todo: currentTodo}\n    });\n  };\n\n  editOnSubmit = todoId => {\n    console.log(\"Beginning of editOnSubmit in todoList component\");\n    axios.get(\"http://localhost:4000/todos/\" + todoId).then(res => {\n      const updatedTodo = res.data;\n      console.log(\"db response: \", res.data);\n      const arrayCopy = this.state.todos.map(currentTodo => {\n        console.log(\"updatedTodo: \", updatedTodo);\n        if (updatedTodo._id === currentTodo._id) {\n          return updatedTodo;\n        }\n        return currentTodo;\n      });\n      console.log(\"arrayCopy: \", arrayCopy);\n      this.setState({\n        todos: arrayCopy,\n        modalData: {}\n      });\n    });\n\n    console.log(\"END of todoList's editOnSubmit function\");\n  };\n// END EDIT -------------------------------------------------------------------\n  delete = todoId => {\n    const arrayCopy = this.state.todos.filter(todo => todo._id !== todoId);\n\n    axios.delete(\"http://localhost:4000/todos/\" + todoId).catch(error => {\n      console.log(error);\n    });\n\n    this.setState({\n      todos: arrayCopy\n    });\n  };\n// MODAL ----------------------------------------------------------------------\n  modalClose = () => {\n    // closes modal\n    this.setState({\n      modalData: {}\n    });\n  };\n// END MODAL ------------------------------------------------------------------\n  render() {\n    const modalData = this.state.modalData;\n    console.log(\"modalData: \", modalData);\n    let modal;\n\n    if (this.state.modalData.todo === \"new\") {\n      modal = (\n        <Modal\n          handleClose={this.modalClose}\n        >\n        {<EditTodo todo={modalData} submitEdit={this.editOnSubmit} />}\n        \n        </Modal>\n      );\n    } else if (this.state.modalData.todo){\n      modal = (\n        <Modal \n        handleClose={this.modalClose}\n        submitClick={this.createTodoSubmit}\n        >\n        <CreateTodo />\n\n        </Modal>\n      );\n    };\n    const list = this.state.todos.map((currentTodo, i) => {\n      return (\n        <Todo\n          delete={this.delete}\n          editClick={this.editOnClick}\n          todo={currentTodo}\n          key={i}\n        />\n      );\n    });\n\n    return (\n      <div className=\"container\">\n        <h2>Todo List Header</h2>\n        <div className=\"contain-table\">\n          <table className=\"striped-table\">\n            <thead>\n              <tr>\n                <th>Description</th>\n                <th>Responsibility</th>\n                <th>Priority</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>{list}</tbody>\n          </table>\n        </div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}