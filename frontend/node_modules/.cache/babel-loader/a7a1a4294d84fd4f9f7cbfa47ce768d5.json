{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanlassiter/Dev/my-portfolio/todo-list-mern/frontend/src/components/todoList.component.js\";\nimport React from \"react\";\nimport Todo from \"../components/todo.component\";\nimport axios from \"axios\";\nimport Modal from \"../components/modal.components\";\nimport CreateTodo from \"./createTodo.component\";\nimport EditTodo from \"./editTodo.component\";\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createTodoClick = () => {\n      this.setState({\n        modalData: {\n          todo: \"new\"\n        }\n      });\n    };\n\n    this.onCreateNewTodoSubmitClick = () => {\n      axios.get(\"http://localhost:4000/todos/\").then(res => {\n        console.log(\"db response: \", res.data);\n        const arrayCopy = this.state.todos.map(currentTodo => {});\n      });\n    };\n\n    this.editOnClick = currentTodo => {\n      console.log(\"EditOnClick triggered\"); // set state of modal\n\n      this.setState({\n        modalData: {\n          todo: currentTodo\n        }\n      });\n    };\n\n    this.editOnSubmit = todoId => {\n      console.log(\"Beginning of editOnSubmit in todoList component\");\n      axios.get(\"http://localhost:4000/todos/\" + todoId).then(res => {\n        const updatedTodo = res.data;\n        console.log(\"db response: \", res.data);\n        const arrayCopy = this.state.todos.map(currentTodo => {\n          console.log(\"updatedTodo: \", updatedTodo);\n\n          if (updatedTodo._id === currentTodo._id) {\n            return updatedTodo;\n          }\n\n          return currentTodo;\n        });\n        console.log(\"arrayCopy: \", arrayCopy);\n        this.setState({\n          todos: arrayCopy,\n          modalData: {}\n        });\n      });\n      console.log(\"END of todoList's editOnSubmit function\");\n    };\n\n    this.delete = todoId => {\n      const arrayCopy = this.state.todos.filter(todo => todo._id !== todoId);\n      axios.delete(\"http://localhost:4000/todos/\" + todoId).catch(error => {\n        console.log(error);\n      });\n      this.setState({\n        todos: arrayCopy\n      });\n    };\n\n    this.modalClose = () => {\n      // closes modal\n      this.setState({\n        modalData: {}\n      });\n    };\n\n    this.state = {\n      todos: [],\n      modalData: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:4000/todos/\").then(res => {\n      this.setState({\n        todos: res.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // CREATE -------------------------------------------------------------------\n\n\n  // END MODAL ------------------------------------------------------------------\n  render() {\n    const modalData = this.state.modalData;\n    console.log(\"modalData: \", modalData);\n    let modal;\n\n    if (this.state.modalData.todo === \"new\") {\n      modal = React.createElement(Modal, {\n        handleClose: this.modalClose,\n        submitClick: this.createTodoSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(CreateTodo, {\n        submitNew: this.onCreateNewTodoSubmitClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n    } else if (this.state.modalData.todo) {\n      modal = React.createElement(Modal, {\n        handleClose: this.modalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(EditTodo, {\n        todo: modalData,\n        submitEdit: this.editOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n\n    ;\n    const list = this.state.todos.map((currentTodo, i) => {\n      return React.createElement(Todo, {\n        delete: this.delete,\n        editClick: this.editOnClick,\n        todo: currentTodo,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Todo List Header\"), React.createElement(\"div\", {\n      className: \"contain-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"striped-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Responsibility\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Priority\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, list))), React.createElement(\"button\", {\n      onClick: this.createTodoClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Create New Todo\"), modal);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/jonathanlassiter/Dev/my-portfolio/todo-list-mern/frontend/src/components/todoList.component.js"],"names":["React","Todo","axios","Modal","CreateTodo","EditTodo","TodoList","Component","constructor","props","createTodoClick","setState","modalData","todo","onCreateNewTodoSubmitClick","get","then","res","console","log","data","arrayCopy","state","todos","map","currentTodo","editOnClick","editOnSubmit","todoId","updatedTodo","_id","delete","filter","catch","error","modalClose","componentDidMount","render","modal","createTodoSubmit","list","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Todo from \"../components/todo.component\";\nimport axios from \"axios\";\nimport Modal from \"../components/modal.components\";\nimport CreateTodo from \"./createTodo.component\";\nimport EditTodo from \"./editTodo.component\";\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { todos: [], modalData: {} };\n  }\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:4000/todos/\")\n      .then(res => {\n        this.setState({ todos: res.data });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n  // CREATE -------------------------------------------------------------------\n  createTodoClick =() =>{\n    this.setState({\n      modalData:{todo:\"new\"}\n    })\n  }\n  onCreateNewTodoSubmitClick = () =>{\n    axios.get(\"http://localhost:4000/todos/\").then(res => {\n      console.log(\"db response: \", res.data);\n      const arrayCopy = this.state.todos.map(currentTodo => {\n        \n      });\n  });\n}\n\n  // END CREATE ---------------------------------------------------------------\n\n  // EDIT----------------------------------------------------------------------\n  editOnClick = currentTodo => {\n    console.log(\"EditOnClick triggered\");\n\n    // set state of modal\n    this.setState({\n      modalData: {todo: currentTodo}\n    });\n  };\n\n  editOnSubmit = todoId => {\n    console.log(\"Beginning of editOnSubmit in todoList component\");\n    axios.get(\"http://localhost:4000/todos/\" + todoId).then(res => {\n      const updatedTodo = res.data;\n      console.log(\"db response: \", res.data);\n      const arrayCopy = this.state.todos.map(currentTodo => {\n        console.log(\"updatedTodo: \", updatedTodo);\n        if (updatedTodo._id === currentTodo._id) {\n          return updatedTodo;\n        }\n        return currentTodo;\n      });\n      console.log(\"arrayCopy: \", arrayCopy);\n      this.setState({\n        todos: arrayCopy,\n        modalData: {}\n      });\n    });\n\n    console.log(\"END of todoList's editOnSubmit function\");\n  };\n// END EDIT -------------------------------------------------------------------\n  delete = todoId => {\n    const arrayCopy = this.state.todos.filter(todo => todo._id !== todoId);\n\n    axios.delete(\"http://localhost:4000/todos/\" + todoId).catch(error => {\n      console.log(error);\n    });\n\n    this.setState({\n      todos: arrayCopy\n    });\n  };\n// MODAL ----------------------------------------------------------------------\n  modalClose = () => {\n    // closes modal\n    this.setState({\n      modalData: {}\n    });\n  };\n// END MODAL ------------------------------------------------------------------\n  render() {\n    const modalData = this.state.modalData;\n    console.log(\"modalData: \", modalData);\n    let modal;\n\n    if (this.state.modalData.todo === \"new\") {\n      modal = (\n        <Modal \n        handleClose={this.modalClose}\n        submitClick={this.createTodoSubmit}\n        >\n        <CreateTodo submitNew= {this.onCreateNewTodoSubmitClick}/>\n\n        </Modal>\n      );\n       \n    } else if (this.state.modalData.todo){\n       modal = (<Modal\n          handleClose={this.modalClose}\n        >\n        {<EditTodo todo={modalData} submitEdit={this.editOnSubmit} />}\n        \n        </Modal>\n      );\n      \n    };\n    const list = this.state.todos.map((currentTodo, i) => {\n      return (\n        <Todo\n          delete={this.delete}\n          editClick={this.editOnClick}\n          todo={currentTodo}\n          key={i}\n        />\n      );\n    });\n\n    return (\n      <div className=\"container\">\n        <h2>Todo List Header</h2>\n        <div className=\"contain-table\">\n          <table className=\"striped-table\">\n            <thead>\n              <tr>\n                <th>Description</th>\n                <th>Responsibility</th>\n                <th>Priority</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>{list}</tbody>\n          </table>\n        </div>\n        <button onClick={this.createTodoClick}>Create New Todo</button>\n        {modal}\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}